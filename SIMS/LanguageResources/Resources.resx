<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountListItem" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddCaps" xml:space="preserve">
    <value>ADD</value>
  </data>
  <data name="AddGuest" xml:space="preserve">
    <value>Add Guest</value>
  </data>
  <data name="AddingGuestPatient" xml:space="preserve">
    <value>Adding Guest Patient</value>
  </data>
  <data name="Adress" xml:space="preserve">
    <value>Adress</value>
  </data>
  <data name="AdressColon" xml:space="preserve">
    <value>Adress:</value>
  </data>
  <data name="AllergensColon" xml:space="preserve">
    <value>Allergens:</value>
  </data>
  <data name="Appointment" xml:space="preserve">
    <value>Appointment</value>
  </data>
  <data name="AppointmentCanceledMessage" xml:space="preserve">
    <value>Appointment is canceled successfully.</value>
  </data>
  <data name="AppointmentDateColon" xml:space="preserve">
    <value>Appointment Date:</value>
  </data>
  <data name="AppointmentDetails" xml:space="preserve">
    <value>Appointment Details</value>
  </data>
  <data name="AppointmentsListItem" xml:space="preserve">
    <value>Appointments</value>
  </data>
  <data name="AppointmentUpdate" xml:space="preserve">
    <value>Appointment Update</value>
  </data>
  <data name="BirthDateColon" xml:space="preserve">
    <value>Birth Date:</value>
  </data>
  <data name="BloodTypeColon" xml:space="preserve">
    <value>Blood Type:</value>
  </data>
  <data name="CancelAppointment" xml:space="preserve">
    <value>Cancel Appointment</value>
  </data>
  <data name="CancelCaps" xml:space="preserve">
    <value>CANCEL</value>
  </data>
  <data name="ChooseAppointmentColon" xml:space="preserve">
    <value>Choose Appointment:</value>
  </data>
  <data name="ChooseAppointmentToCancelMessage" xml:space="preserve">
    <value>Choose appointment to cancel.</value>
  </data>
  <data name="ChooseAppointmentToUpdateMessage" xml:space="preserve">
    <value>Choose appointment to update.</value>
  </data>
  <data name="ChoosePatientToDeleteMessage" xml:space="preserve">
    <value>Choose patient to delete.</value>
  </data>
  <data name="ChoosePatientToUnblockMessage" xml:space="preserve">
    <value>Choose patient to unblock.</value>
  </data>
  <data name="ChoosePatientToUpdateMessage" xml:space="preserve">
    <value>Choose patient to update.</value>
  </data>
  <data name="ChronicPainsColon" xml:space="preserve">
    <value>Chronic Pains:</value>
  </data>
  <data name="CityColon" xml:space="preserve">
    <value>City:</value>
  </data>
  <data name="CountryColon" xml:space="preserve">
    <value>Country:</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateColon" xml:space="preserve">
    <value>Date: </value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Doctor" xml:space="preserve">
    <value>Doctor</value>
  </data>
  <data name="DoctorColon" xml:space="preserve">
    <value>Doctor:</value>
  </data>
  <data name="DoctorOnVacationMessage" xml:space="preserve">
    <value>Doctor is on vacation at the specified time.</value>
  </data>
  <data name="DoctorsListItem" xml:space="preserve">
    <value>Doctors</value>
  </data>
  <data name="DoctorUnavailableMessage" xml:space="preserve">
    <value>Doctor is unavailable at the specified time.</value>
  </data>
  <data name="DurationColon" xml:space="preserve">
    <value>Duration:</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailColon" xml:space="preserve">
    <value>Email:</value>
  </data>
  <data name="EndTimeColon" xml:space="preserve">
    <value>End Time:</value>
  </data>
  <data name="Examination" xml:space="preserve">
    <value>Examination</value>
  </data>
  <data name="ExaminationDateColon" xml:space="preserve">
    <value>Examination Date:</value>
  </data>
  <data name="ExaminationScheduling" xml:space="preserve">
    <value>Examination Scheduling</value>
  </data>
  <data name="FillFieldsMessage" xml:space="preserve">
    <value>Please fill in all fields.</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="FullNameColon" xml:space="preserve">
    <value>Full Name:</value>
  </data>
  <data name="GenerateCaps" xml:space="preserve">
    <value>GENERATE</value>
  </data>
  <data name="Guest" xml:space="preserve">
    <value>Guest</value>
  </data>
  <data name="GuestColon" xml:space="preserve">
    <value>Guest:</value>
  </data>
  <data name="HomePageListItem" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="IncorrectDateFormatMessage" xml:space="preserve">
    <value>Incorrect date format. (dd.MM.yyyy.)</value>
  </data>
  <data name="IncorrectEmailFormatMessage" xml:space="preserve">
    <value>Incorrect email address format.</value>
  </data>
  <data name="IncorrectPhoneNumberFormatMessage" xml:space="preserve">
    <value>Incorrect phone number format.</value>
  </data>
  <data name="InvalidDateMessage" xml:space="preserve">
    <value>Invalid date.</value>
  </data>
  <data name="InvalidDatesMessage" xml:space="preserve">
    <value>End date must be greater then start date.</value>
  </data>
  <data name="Jmbg" xml:space="preserve">
    <value>Jmbg</value>
  </data>
  <data name="JmbgColon" xml:space="preserve">
    <value>Jmbg:</value>
  </data>
  <data name="JmbgNumberMessage" xml:space="preserve">
    <value>Jmbg must have exactly 13 digits.</value>
  </data>
  <data name="LastNameColon" xml:space="preserve">
    <value>Last Name:</value>
  </data>
  <data name="Lbo" xml:space="preserve">
    <value>Lbo</value>
  </data>
  <data name="LboColon" xml:space="preserve">
    <value>Lbo:</value>
  </data>
  <data name="LboNumberMessage" xml:space="preserve">
    <value>Lbo must consist of digits.</value>
  </data>
  <data name="NameColon" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="NewVacationAdding" xml:space="preserve">
    <value>New Vacation Adding</value>
  </data>
  <data name="NotificationDefaultText" xml:space="preserve">
    <value>You can input your notification here.</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="OkCaps" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PasswordColon" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="Patient" xml:space="preserve">
    <value>Patient</value>
  </data>
  <data name="PatientAdding" xml:space="preserve">
    <value>Patient Adding</value>
  </data>
  <data name="PatientColon" xml:space="preserve">
    <value>Patient:</value>
  </data>
  <data name="PatientDeletedMessage" xml:space="preserve">
    <value>Patient is deleted successfully.</value>
  </data>
  <data name="PatientDetails" xml:space="preserve">
    <value>Patient Details</value>
  </data>
  <data name="PatientNotBannedMessage" xml:space="preserve">
    <value>Patient is not banned.</value>
  </data>
  <data name="PatientsListItem" xml:space="preserve">
    <value>Patients</value>
  </data>
  <data name="PatientUnblockedMessage" xml:space="preserve">
    <value>Patient is unblocked successfully.</value>
  </data>
  <data name="PatientUpdate" xml:space="preserve">
    <value>Patient Update</value>
  </data>
  <data name="PatientWithoutAccountMessage" xml:space="preserve">
    <value>Patient does not have account.</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhoneNumberColon" xml:space="preserve">
    <value>Phone Number:</value>
  </data>
  <data name="PostalCodeColon" xml:space="preserve">
    <value>Postal Code:</value>
  </data>
  <data name="PostalCodeNumberMessage" xml:space="preserve">
    <value>Postal code must be number.</value>
  </data>
  <data name="QuitCaps" xml:space="preserve">
    <value>QUIT</value>
  </data>
  <data name="ReportListItem" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Room" xml:space="preserve">
    <value>Room</value>
  </data>
  <data name="RoomColon" xml:space="preserve">
    <value>Room:</value>
  </data>
  <data name="RoomNotOccupied" xml:space="preserve">
    <value>The room is not occupied during the specified period.</value>
  </data>
  <data name="RoomNumberColon" xml:space="preserve">
    <value>Room Number: </value>
  </data>
  <data name="RoomOccupancyReport" xml:space="preserve">
    <value>Room Occupancy Report</value>
  </data>
  <data name="RoomUnavailableMessage" xml:space="preserve">
    <value>Room is unavailable at the specified time.</value>
  </data>
  <data name="ScheduleCaps" xml:space="preserve">
    <value>SCHEDULE</value>
  </data>
  <data name="ScheduleExamination" xml:space="preserve">
    <value>Schedule Examination</value>
  </data>
  <data name="ScheduleSurgery" xml:space="preserve">
    <value>Schedule Surgery</value>
  </data>
  <data name="SecretaryColon" xml:space="preserve">
    <value>Secretary: </value>
  </data>
  <data name="SecretarysAccount" xml:space="preserve">
    <value>Secretary's Account</value>
  </data>
  <data name="SelectRoleMessage" xml:space="preserve">
    <value>Select at least one role.</value>
  </data>
  <data name="SexColon" xml:space="preserve">
    <value>Sex:</value>
  </data>
  <data name="SpecializationColon" xml:space="preserve">
    <value>Specialization:</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="StartTimeColon" xml:space="preserve">
    <value>Start Time:</value>
  </data>
  <data name="Surgery" xml:space="preserve">
    <value>Surgery</value>
  </data>
  <data name="SurgeryDateColon" xml:space="preserve">
    <value>Surgery Date:</value>
  </data>
  <data name="SurgeryScheduling" xml:space="preserve">
    <value>Surgery Scheduling</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="TypeColon" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="Unblock" xml:space="preserve">
    <value>Unblock</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateAppointment" xml:space="preserve">
    <value>Update Appointment</value>
  </data>
  <data name="UpdateCaps" xml:space="preserve">
    <value>UPDATE</value>
  </data>
  <data name="UrgentExamination" xml:space="preserve">
    <value>Urgent Examination</value>
  </data>
  <data name="UrgentExaminationScheduledMessage" xml:space="preserve">
    <value>Urgent examination is scheduled successfully.</value>
  </data>
  <data name="UrgentExaminationScheduling" xml:space="preserve">
    <value>Urgent Examination Scheduling</value>
  </data>
  <data name="UrgentSurgery" xml:space="preserve">
    <value>Urgent Surgery</value>
  </data>
  <data name="UrgentSurgeryScheduledMessage" xml:space="preserve">
    <value>Urgent surgery is scheduled successfully.</value>
  </data>
  <data name="UrgentSurgeryScheduling" xml:space="preserve">
    <value>Urgent Surgery Scheduling</value>
  </data>
  <data name="UsernameColon" xml:space="preserve">
    <value>Username:</value>
  </data>
  <data name="VacationCreatedMessage" xml:space="preserve">
    <value>Vacation for doctor is created successfully.</value>
  </data>
  <data name="VacationDaysColon" xml:space="preserve">
    <value>Vacation Days:</value>
  </data>
  <data name="VacationDaysUpdatedMessage" xml:space="preserve">
    <value>Number of vacation days is updated successfully.</value>
  </data>
  <data name="VacationEndColon" xml:space="preserve">
    <value>Vacation End:</value>
  </data>
  <data name="VacationNotNumberMessage" xml:space="preserve">
    <value>Number of vacation days is not number.</value>
  </data>
  <data name="VacationStartColon" xml:space="preserve">
    <value>Vacation Start:</value>
  </data>
  <data name="WelcomeHomePage" xml:space="preserve">
    <value>Welcome</value>
  </data>
</root>